image: condaforge/linux-anvil:latest

variables:
  PKG_NAME: "pdb2pqr"
  CONDA_ROOT_DIR: "/opt/conda"

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - conda config --append channels kimlab
    - cd $CI_PROJECT_DIR/devtools/conda-recipe
    - conda build .
    # Save conda package
    - cd $CI_PROJECT_DIR
    - mkdir -p conda-bld/linux-64
    - cp $CONDA_ROOT_DIR/conda-bld/linux-64/*.tar.bz2 conda-bld/linux-64/
  artifacts:
    paths:
    - conda-bld

.test_template: &test_definition  # Hidden key that defines an anchor named 'job_definition'
  stage: test
  script:
    - conda config --append channels kimlab
    - conda update conda  # update channels cache
    - mkdir -p $CONDA_ROOT_DIR/conda-bld/linux-64/
    - cp conda-bld/linux-64/* $CONDA_ROOT_DIR/conda-bld/linux-64/
    - conda index $CONDA_ROOT_DIR/conda-bld/linux-64/
    - conda install -yq --use-local --use-index-cache $PKG_NAME
    # Custom
    - conda env remove -n scons -y || true
    - conda create -yf -n scons python scons openssl readline ncurses
    - cd pdb2pqr
    - export PYTHON=$(which python)
    - $CONDA_ROOT_DIR/envs/scons/bin/scons scons/scons.py $TEST_NAME

test_local-test:
  variables:
    TEST_NAME: "local-test"
  <<: *test_definition

test_basic-test:
  variables:
    TEST_NAME: "basic-test"
  <<: *test_definition

test_pdb2pka-test:
  variables:
    TEST_NAME: "pdb2pka-test"
  <<: *test_definition

test_advanced-test:
  variables:
    TEST_NAME: "advanced-test"
  <<: *test_definition

deploy:
  stage: deploy
  script:
    - anaconda -t $ANACONDA_TOKEN upload `pwd`/conda-bld/linux-64/*.tar.bz2 -u kimlab
  only:
    - master
